{
    "projects": [
        {
            "title": "AI Assistant",
            "description": [
                "Developed a personal AI assistant that automates tasks like sending emails, scheduling meetings, performing internet searches, and answering queries from PDFs, leveraging RAG for multi-document querying and context-aware responses.",
                "Integrated specialized agents into a unified master agent using ReAct framework for seamless task execution, ensuring efficient and accurate responses."
            ]
        },
        {
            "title": "Reproducing ChatGPT",
            "description": [
                "Trained GPT-2 124M model from scratch on FineWeb dataset, achieving a 6.5% improvement in HellaSwag accuracy from 0.31 to 0.33 through enhancements including replacing LayerNorm with RMSNorm and incorporating Rotary Positional Encodings.",
                "Optimized multi-head attention by implementing Group Query Attention, resulting in enhanced model performance."
            ]
        },
        {
            "title": "Job Recommendation System",
            "description": [
                "Designed a personalized job recommendation system by analyzing users' work history and applying user collaborative filtering, resulting in 89% accuracy and a hit rate of 0.78.",
                "Conducted text preprocessing to transform job descriptions and user profiles into word2vec embeddings and TF-IDF vectors, ensuring accurate matching."
            ]
        },
        {
            "title": "Wide Residual Attention Networks",
            "description": [
                "Enhanced ResNet model by adding mask attention after residual blocks, achieving 95.4% accuracy on the CIFAR-10 dataset through applied normalization, random flipping, and Gaussian noise to training images.",
                "Improved model performance by incorporating attention mechanisms, enabling the model to focus on relevant features."
            ]
        },
        {
            "title": "Chicken Disease Classification using MLOps",
            "description": [
                "Designed a scalable ML solution by integrating pre-trained VGG16 with custom layers, executing data ingestion, training, and evaluation using DVC for pipeline tracking.",
                "Deployed the model using Docker on AWS EC2, leveraging GitHub Actions for automated CI/CD pipelines, ensuring efficient model deployment and management."
            ]
        },
        {
            "title": "Fraud Classification using GCP",
            "description": [
                "Collected and stored employee data in GCS bucket, transforming data and masking sensitive information using Cloud Data Fusion.",
                "Created dashboards using Looker and automated ETL process with Airflow, enabling real-time data analysis and visualization."
            ]
        }
    ]
}